// Importa a biblioteca 'node-shazam'
const { Shazam } = require('node-shazam');

// Cria uma instância do Shazam
const shazam = new Shazam();

async function identificarMusica() {
    try {
        // Caminho do arquivo de áudio
        const filePath = 'musica.mp3';  // Substitua pelo caminho correto do arquivo
        
        // Usa o método fromFilePath para reconhecer a música no arquivo
        const resultado = await shazam.fromFilePath(filePath, false, 'en');
        
        // Exibe os resultados da identificação da música
        console.log('Resultado da identificação:', resultado);

        // Verifica se a música foi identificada corretamente
        if (resultado && resultado.track) {
            const track = resultado.track;
            console.log('Música encontrada:', track.title);  // Título da música
            console.log('Artista:', track.subtitle);  // Artista da música
            console.log('Álbum:', track.album ? track.album.title : 'Álbum não disponível');  // Álbum da música (verifica se a propriedade existe)
        } else {
            console.log('Nenhuma música encontrada no arquivo.');
        }
    } catch (error) {
        console.error('Erro ao identificar a música:', error);  // Trata o erro
    }
}

async function buscarMelhoresFaixas() {
    try {
        // Obtém as melhores faixas globalmente
        const response = await shazam.top_tracks_global('en-US', 'GB', '10', '0');
        
        // Log da resposta da API antes de tentar fazer o parse
        console.log('Resposta bruta da API:', response);

        // Verifica se a resposta é válida e se contém dados
        if (response && response.tracks && response.tracks.hits) {
            console.log('Melhores faixas globalmente:', response.tracks.hits);
        } else {
            console.log('Resposta inválida ou vazia para as melhores faixas.');
        }
    } catch (error) {
        console.error('Erro ao buscar as melhores faixas:', error);
    }
}

// Executa a identificação de música
identificarMusica();

// Executa a busca das melhores faixas
buscarMelhoresFaixas();