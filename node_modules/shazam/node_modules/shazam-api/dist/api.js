"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Shazam = exports.Endpoint = void 0;
const algorithm_1 = require("./algorithm");
const node_fetch_1 = __importDefault(require("node-fetch"));
const TIME_ZONE = "Europe/Paris";
function uuidv4() {
    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {
        var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);
        return v.toString(16);
    }).toUpperCase();
}
class Endpoint {
    constructor(timezone) {
        this.timezone = timezone;
    }
    ;
    url() {
        return `${Endpoint.SCHEME}://${Endpoint.HOSTNAME}/discovery/v5/en/US/iphone/-/tag/${uuidv4()}/${uuidv4()}`;
    }
    params() {
        return {
            'sync': 'true',
            'webv3': 'true',
            'sampling': 'true',
            'connected': '',
            'shazamapiversion': 'v3',
            'sharehub': 'true',
            'hubv5minorversion': 'v5.1',
            'hidelb': 'true',
            'video': 'v3'
        };
    }
    headers() {
        return {
            "X-Shazam-Platform": "IPHONE",
            "X-Shazam-AppVersion": "14.1.0",
            "Accept": "*/*",
            "Content-Type": "application/json",
            "Accept-Encoding": "gzip, deflate",
            "Accept-Language": "en",
            "User-Agent": "Shazam/3685 CFNetwork/1197 Darwin/20.0.0"
        };
    }
    async sendRecognizeRequest(url, body) {
        var _a;
        const fetch = (_a = global.fetch) !== null && _a !== void 0 ? _a : node_fetch_1.default;
        return await (await fetch(url, { body, headers: this.headers(), method: "POST" })).json();
    }
    async formatAndSendRecognizeRequest(signature) {
        let data = {
            'timezone': this.timezone,
            'signature': {
                'uri': signature.encodeToUri(),
                'samplems': Math.round(signature.numberSamples / signature.sampleRateHz * 1000)
            },
            'timestamp': new Date().getTime(),
            'context': {},
            'geolocation': {}
        };
        const url = new URL(this.url());
        Object.entries(this.params()).forEach(([a, b]) => url.searchParams.append(a, b));
        let response = await this.sendRecognizeRequest(url.toString(), JSON.stringify(data));
        if (response.matches.length === 0)
            return null;
        return response;
    }
}
exports.Endpoint = Endpoint;
Endpoint.SCHEME = "https";
Endpoint.HOSTNAME = "amp.shazam.com";
class Shazam {
    constructor(timeZone) {
        this.endpoint = new Endpoint(timeZone !== null && timeZone !== void 0 ? timeZone : TIME_ZONE);
    }
    async recognizeSong(samples, callback) {
        var _a, _b;
        let response = await this.fullRecognizeSong(samples, callback);
        if (!response)
            return null;
        const trackData = response.track, mainSection = trackData.sections.find((e) => e.type === "SONG");
        const title = trackData.title, artist = trackData.subtitle, album = (_a = mainSection.metadata.find(e => e.title === "Album")) === null || _a === void 0 ? void 0 : _a.text, year = (_b = mainSection.metadata.find(e => e.title === "Released")) === null || _b === void 0 ? void 0 : _b.text;
        return { title, artist, album, year };
    }
    async fullRecognizeSong(samples, callback) {
        callback === null || callback === void 0 ? void 0 : callback("generating");
        let generator = this.createSignatureGenerator(samples);
        while (true) {
            callback === null || callback === void 0 ? void 0 : callback("generating");
            const signature = generator.getNextSignature();
            if (!signature) {
                break;
            }
            callback === null || callback === void 0 ? void 0 : callback("transmitting");
            let results = await this.endpoint.formatAndSendRecognizeRequest(signature);
            if (results !== null)
                return results;
        }
        return null;
    }
    createSignatureGenerator(samples) {
        let signatureGenerator = new algorithm_1.SignatureGenerator();
        signatureGenerator.feedInput(samples);
        return signatureGenerator;
    }
}
exports.Shazam = Shazam;
Shazam.MAX_TIME_SCEONDS = 8;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBpLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL2FwaS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSwyQ0FBaUQ7QUFFakQsNERBQWdDO0FBR2hDLE1BQU0sU0FBUyxHQUFHLGNBQWMsQ0FBQztBQUVqQyxTQUFTLE1BQU07SUFDWCxPQUFPLHNDQUFzQyxDQUFDLE9BQU8sQ0FBQyxPQUFPLEVBQUUsVUFBUyxDQUFDO1FBQ3ZFLElBQUksQ0FBQyxHQUFHLElBQUksQ0FBQyxNQUFNLEVBQUUsR0FBRyxFQUFFLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxDQUFDLElBQUksR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLEdBQUcsR0FBRyxHQUFHLENBQUMsQ0FBQztRQUNuRSxPQUFPLENBQUMsQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLENBQUM7SUFDeEIsQ0FBQyxDQUFDLENBQUMsV0FBVyxFQUFFLENBQUM7QUFDbkIsQ0FBQztBQUdILE1BQWEsUUFBUTtJQUlqQixZQUFtQixRQUFnQjtRQUFoQixhQUFRLEdBQVIsUUFBUSxDQUFRO0lBQUUsQ0FBQztJQUFBLENBQUM7SUFDdkMsR0FBRztRQUNDLE9BQU8sR0FBRyxRQUFRLENBQUMsTUFBTSxNQUFNLFFBQVEsQ0FBQyxRQUFRLG9DQUFvQyxNQUFNLEVBQUUsSUFBSSxNQUFNLEVBQUUsRUFBRSxDQUFDO0lBQy9HLENBQUM7SUFDRCxNQUFNO1FBQ0YsT0FBTztZQUNILE1BQU0sRUFBRSxNQUFNO1lBQ2QsT0FBTyxFQUFFLE1BQU07WUFDZixVQUFVLEVBQUUsTUFBTTtZQUNsQixXQUFXLEVBQUUsRUFBRTtZQUNmLGtCQUFrQixFQUFFLElBQUk7WUFDeEIsVUFBVSxFQUFFLE1BQU07WUFDbEIsbUJBQW1CLEVBQUUsTUFBTTtZQUMzQixRQUFRLEVBQUUsTUFBTTtZQUNoQixPQUFPLEVBQUUsSUFBSTtTQUNoQixDQUFDO0lB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