const axios = require("axios");
const yts = require("yt-search");

async function ytmp3v2(url, kbps = 128) {
  try {
    let incluKbps = ["64", "128", "192", "256", "320"]
    let quality = incluKbps.includes(kbps) ? kbps : 128
    let response = await axios.post(
  'https://dws5.ezmp3.cc/api/convert',
  {
    'url': url,
    'quality': quality,
    'trim': false,
    'startT': 0,
    'endT': 0
  },
  {
    headers: {
      'Content-Type': 'application/json',
      'User-Agent': 'Mozilla/5.0 (Linux; Android 10; K) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/128.0.0.0 Mobile Safari/537.36',
      'Referer': 'https://ezmp3.cc/'
    }
  }
);

    do {
    response = await axios.post(
  'https://dws5.ezmp3.cc/api/convert',
  {
    'url': url,
    'quality': quality,
    'trim': false,
    'startT': 0,
    'endT': 0
  },
  {
    headers: {
      'Content-Type': 'application/json',
      'User-Agent': 'Mozilla/5.0 (Linux; Android 10; K) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/128.0.0.0 Mobile Safari/537.36',
      'Referer': 'https://ezmp3.cc/'
    }
  }
);
} while (response.data.status !== "done")
let links = response.data.url.replace("st1.ezmp3.cc", "st3.ezmp3.cc")
    let results = {
      status: true,
      quality: quality + "Kbps",
      availableQuality: incluKbps,
      url: response.data.url,
      filename: response.data.title + " (" + quality + "Kbps).mp3"
    };
    return {
      data: results
    }
  } catch (error) {
    return {
      status: false,
      message: error.message
    };
  }
}

async function ytmp4v2(url, reso = "360") {
  try {
    let incluResolusi = ["360", "480", "720", "1080", "1440"]
    let Quality = incluResolusi.includes(reso) ? reso : 360
    const response = await axios.get('https://ab.cococococ.com/ajax/download.php', {
      params: {
        'copyright': '0',
        'format': Quality,
        'url': url,
        'api': 'dfcb6d76f2f6a9894gjkege8a4ab232222'
      },
      headers: {
        'User-Agent': 'Mozilla/5.0 (Linux; Android 10; K) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Mobile Safari/537.36',
        'Referer': 'https://ddownr.com/en46/'
      }
    });
    let convert = await getConvertStatus(response.data.id);
    if (convert.error) return {
      data: "Terjadi kesalahan saat converting"
    }
    do {
      convert = await getConvertStatus(response.data.id);
    } while (convert.text !== "Finished");
    let results = {
      status: true,
      quality: Quality + "p",
      availableQuality: incluResolusi,
      url: convert.download_url,
      filename: response.data.title + " (" + Quality + "p).mp4"
    };
    return {
      data: results
    }
  }
  catch (error) {
    return {
      status: false,
      message: error.message
    };
  }
}

async function getConvertStatus(id) {
  try {
    const response = await axios.get('https://p.oceansaver.in/ajax/progress.php', {
      params: {
        'id': id
      },
      headers: {
        'User-Agent': 'Mozilla/5.0 (Linux; Android 10; K) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Mobile Safari/537.36',
        'Referer': 'https://ddownr.com/en46/'
      }
    });
    return response.data;
  }
  catch (error) {
    return {
      error: true,
      message: error.message
    };
  }
}

function getYouTubeVideoId(url) {
  const regex = /(?:https?:\/\/)?(?:www\.)?(?:youtube\.com\/(?:[^\/\n\s]+\/\S+\/|v\/|embed\/|user\/[^\/\n\s]+\/)?(?:watch\?v=|v%3D|embed%2F|video%2F)?|youtu\.be\/|youtube\.com\/watch\?v=|youtube\.com\/embed\/|youtube\.com\/v\/|youtube\.com\/shorts\/|youtube\.com\/playlist\?list=)([a-zA-Z0-9_-]{11})/;
  const match = url.match(regex);
  return match ? match[1] : null;
}

async function search(teks) {
  try {
    let data = await yts(teks);
    return {
      status: true,
      creator: "Anak EpEp",
      results: data.all
    };
  }
  catch (error) {
    return {
      status: false,
      message: error.message
    };
  }
}

async function ytmp3(link) {
  const videoId = getYouTubeVideoId(link);
  if (!videoId) {
    return {
      status: false,
      message: "Invalid YouTube URL"
    };
  }
  try {
    let data = await yts("https://youtube.com/watch?v=" + videoId);
    let response = await ytmp3v2(link)
    if (!response.data.status) {
      response = await axios.post(
        'https://cnvmp3.com/fetch.php', {
          'url': 'https://youtube.com/watch?v=' + videoId,
          'downloadMode': 'audio',
          'filenameStyle': 'pretty',
          'audioBitrate': '96'
        }, {
          headers: {
            'Accept': 'application/json',
            'Content-Type': 'application/json',
            'User-Agent': 'Mozilla/5.0 (Linux; Android 10; K) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Mobile Safari/537.36',
            'Referer': 'https://cnvmp3.com/'
          }
        }
      );
    }
    return {
      status: true,
      creator: "Anak EpEp",
      metadata: data.all[0],
      download: response.data
    };
  } catch (error) {
    console.log(error)
    return {
      status: false,
      message: error.response ? `HTTP Error: ${error.response.status}` : error.message
    };
  }
}

async function ytmp4(link, resolusi = 360) {
  const videoId = getYouTubeVideoId(link);
  if (!videoId) {
    return {
      status: false,
      message: "Invalid YouTube URL"
    };
  }
  try {
    let data = await yts("https://youtube.com/watch?v=" + videoId);
    let response = await ytmp4v2("https://youtube.com/watch?v=" + videoId, resolusi)
    if (!response.data.status) {
      response = await axios.post(
        'https://cnvmp3.com/fetch.php', {
          'url': 'https://youtube.com/watch?v=' + videoId,
          'downloadMode': 'auto',
          'filenameStyle': 'pretty',
          'audioBitrate': '96'
        }, {
          headers: {
            'Accept': 'application/json',
            'Content-Type': 'application/json',
            'User-Agent': 'Mozilla/5.0 (Linux; Android 10; K) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Mobile Safari/537.36',
            'Referer': 'https://cnvmp3.com/'
          }
        }
      );
    }
    return {
      status: true,
      creator: "Anak EpEp",
      metadata: data.all[0],
      download: response.data
    };
  }
  catch (error) {
    console.log(error)
    return {
      status: false,
      message: error.response ? `HTTP Error: ${error.response.status}` : error.message
    };
  }
}

module.exports = {
  search,
  ytmp3,
  ytmp4
};